#! /usr/bin/env python

import sys, os

from dev_utils import safeArgs, runCmd

def usage():
    print """
Usage: git publish [<remote>] [-e] [-h]
    Assist publishing local branches to a remote repo

    Example:
        git branch my-branch
        git checkout my-branch
        git publish

    Or you can specify the remote
        git publish github
        git publish origin

    Can also be used to push the initial master ( For example, github )
        git add origin git@github.com:tekkub/help-example.git
        git publish

    Options:
         -e   Show the commands to be run, but don't run them
         -h   This help message
"""
    return 0


if __name__ == '__main__':
    
    try:
        args = safeArgs( sys.argv )
        origin = 'origin'
        explain = False

        if '-h' in args:
            sys.exit( usage() )
        
        # If the user specifed a remote repo
        if args[1] != '':
            origin = args[1]

        # Explain the actions taken
        if '-e' in args:
            explain = True

        # Get the current branch from git
        branch = runCmd("git name-rev --name-only HEAD", capture=True).rstrip()
        if branch == '':
            print "-- Could not determine local branch name; not in a git repo?"
            sys.exit(1)

        # Create the new branch on the remote
        runCmd( "git push %(origin)s %(branch)s:refs/heads/%(branch)s" % locals(), explain=explain )
        # Update the local repo, so it knows about the remote branch
        runCmd( "git fetch %(origin)s" % locals(), explain=explain )

        # No need to track master
        if branch == 'master':
            print "-- Refusing to un-publish master"
            sys.exit(1)

    except Exception, e:
        print "-- Caught - %s " % e 
        sys.exit(1)

