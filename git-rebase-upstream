#! /usr/bin/env python

import sys, os
from dev_utils import safeArgs, runCmd, removeArgs

def usage():
    print """
Usage: git rebase-upstream [<origin>] <remote> [-e] [-h]
    Fetches from the upstream source then rebases the current branch

    Example:
        git checkout my-patch
        git rebase-upstream 
    
    Options:
         -e   Show the commands to be run, but don't run them
         -h   This help message
"""
    return 0
    
if __name__ == '__main__':

    try:    
        args = safeArgs( sys.argv )
        remote = 'upstream'
        explain = False

        if '-h' in args:
            sys.exit( usage() )

        if '-e' in args:
            explain = True

        args = removeArgs( args, ['-e', '-h' ] )
        
        if args[1] != '':
            remote = args[1]

        branch = runCmd("git name-rev --name-only HEAD", capture=True).rstrip()
        if branch == '':
            print "-- Could not determine local branch name; not in a git repo?"
            sys.exit(1)
            
        runCmd( "git fetch %(remote)s" % locals(), explain=explain )
        runCmd( "git checkout master", explain=explain )
        runCmd( "git merge %(remote)s/master" % locals(), explain=explain )
        runCmd( "git checkout %(branch)s" % locals(), explain=explain )
        runCmd( "git rebase master", explain=explain )

    except Exception, e:
        print "-- Caught - %s " % e 
        sys.exit(1)

