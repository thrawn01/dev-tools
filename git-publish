#! /usr/bin/env python

import sys, os

sys.path.append( os.path.expanduser("~/bin/lib") )
from utils import safeArgs, runCmd, removeArgs

def getBranchName( input ):
    for line in input.split('\n'):
        if line[0] == '*':
            return line[2:]
    raise Exception( "Unable to find branch; Not in a git repo? " )


if __name__ == '__main__':
    
    try:
        args = safeArgs( sys.argv )
        origin = 'origin'
        explain = False
        
        # If the user specifed a remote repo
        if args[1] != '':
            origin = args[1]
            args = removeArgs( args, [ args[1] ] )

        if '-e' in args:
            explain = True

        # Get the current branch from git
        branch = getBranchName( runCmd( "git branch --no-color", capture=True ) )

        # Create the new branch on the remote
        runCmd( "git push %(origin)s %(branch)s:refs/heads/%(branch)s" % locals(), explain=explain )
        # Update the local repo, so it knows about the remote branch
        runCmd( "git fetch %(origin)s" % locals(), explain=explain )
        # Ensure the local branch tracks with the remote branch
        runCmd( "git branch --track %(branch)s %(origin)s:/%(branch)s" % locals(), explain=explain )

    except Exception, e:
        print "-- Caught - %s " % e 
        sys.exit(-1)

